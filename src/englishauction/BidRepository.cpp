// Generated by Haxe 4.1.1
#include <hxcpp.h>

#ifndef INCLUDED_16d41c6fc5b8bf5d
#define INCLUDED_16d41c6fc5b8bf5d
#include "maglev/MagLev.h"
#endif
#ifndef INCLUDED_869a921fcf5bba54
#define INCLUDED_869a921fcf5bba54
#include "maglev/MagLevAny.h"
#endif
#ifndef INCLUDED_20db69a30a45e926
#define INCLUDED_20db69a30a45e926
#include "maglev/MagLevArray.h"
#endif
#ifndef INCLUDED_95fa5e9194badcf5
#define INCLUDED_95fa5e9194badcf5
#include "maglev/MagLevNumber.h"
#endif
#ifndef INCLUDED_65acb6100057af6e
#define INCLUDED_65acb6100057af6e
#include "maglev/MagLevResult.h"
#endif
#ifndef INCLUDED_c859d2752ef86c43
#define INCLUDED_c859d2752ef86c43
#include "maglev/MagLevString.h"
#endif
#ifndef INCLUDED_englishauction_BidModel
#include <englishauction/BidModel.h>
#endif
#ifndef INCLUDED_englishauction_BidRepository
#include <englishauction/BidRepository.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_15d4c0743c64d545_10_new,"englishauction.BidRepository","new",0x55a628de,"englishauction.BidRepository.new","englishauction/BidRepository.hx",10,0xf18aee53)
HX_LOCAL_STACK_FRAME(_hx_pos_15d4c0743c64d545_13_Add,"englishauction.BidRepository","Add",0x5584027f,"englishauction.BidRepository.Add","englishauction/BidRepository.hx",13,0xf18aee53)
HX_LOCAL_STACK_FRAME(_hx_pos_15d4c0743c64d545_17_Edit,"englishauction.BidRepository","Edit",0x80a30bec,"englishauction.BidRepository.Edit","englishauction/BidRepository.hx",17,0xf18aee53)
HX_LOCAL_STACK_FRAME(_hx_pos_15d4c0743c64d545_21_Remove,"englishauction.BidRepository","Remove",0x011a9aa6,"englishauction.BidRepository.Remove","englishauction/BidRepository.hx",21,0xf18aee53)
HX_LOCAL_STACK_FRAME(_hx_pos_15d4c0743c64d545_27_FindById,"englishauction.BidRepository","FindById",0x578ee14d,"englishauction.BidRepository.FindById","englishauction/BidRepository.hx",27,0xf18aee53)
HX_LOCAL_STACK_FRAME(_hx_pos_15d4c0743c64d545_30_GetNumberOfBids,"englishauction.BidRepository","GetNumberOfBids",0x6428848a,"englishauction.BidRepository.GetNumberOfBids","englishauction/BidRepository.hx",30,0xf18aee53)
namespace englishauction{

void BidRepository_obj::__construct( ::maglev::MagLev bus){
            	HX_STACKFRAME(&_hx_pos_15d4c0743c64d545_10_new)
HXDLIN(  10)		this->bus = bus;
            	}

Dynamic BidRepository_obj::__CreateEmpty() { return new BidRepository_obj; }

void *BidRepository_obj::_hx_vtable = 0;

Dynamic BidRepository_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< BidRepository_obj > _hx_result = new BidRepository_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool BidRepository_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6217c154;
}

void BidRepository_obj::Add( ::englishauction::BidModel bid){
            	HX_STACKFRAME(&_hx_pos_15d4c0743c64d545_13_Add)
            	}


HX_DEFINE_DYNAMIC_FUNC1(BidRepository_obj,Add,(void))

void BidRepository_obj::Edit( ::englishauction::BidModel bid){
            	HX_STACKFRAME(&_hx_pos_15d4c0743c64d545_17_Edit)
            	}


HX_DEFINE_DYNAMIC_FUNC1(BidRepository_obj,Edit,(void))

void BidRepository_obj::Remove(::String bidId){
            	HX_STACKFRAME(&_hx_pos_15d4c0743c64d545_21_Remove)
            	}


HX_DEFINE_DYNAMIC_FUNC1(BidRepository_obj,Remove,(void))

 ::englishauction::BidModel BidRepository_obj::FindById(::String bidId){
            	HX_STACKFRAME(&_hx_pos_15d4c0743c64d545_27_FindById)
HXDLIN(  27)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(BidRepository_obj,FindById,return )

int BidRepository_obj::GetNumberOfBids(::String auctionId){
            	HX_STACKFRAME(&_hx_pos_15d4c0743c64d545_30_GetNumberOfBids)
HXLINE(  31)		 ::maglev::MagLevArray pargs = ::maglev::MagLevArray_obj::create();
HXLINE(  32)		pargs->push(::maglev::MagLevString_obj::fromString(HX_("EnglishAuction.Bid",c2,d3,e1,19)));
HXLINE(  33)		pargs->push(::maglev::MagLevString_obj::fromString(HX_("CountForAuction",c9,bf,e1,14)));
HXLINE(  34)		pargs->push(::maglev::MagLevString_obj::fromString(auctionId));
HXLINE(  35)		 ::maglev::MagLevResult ret = this->bus->call(HX_("Persistence.Get",c7,c3,56,12),pargs);
HXLINE(  36)		int count = 0;
HXLINE(  37)		if (!(ret->isError())) {
HXLINE(  38)			count = ::hx::TCast<  ::maglev::MagLevNumber >::cast(ret->getResult())->getInt();
            		}
HXLINE(  40)		return count;
            	}


HX_DEFINE_DYNAMIC_FUNC1(BidRepository_obj,GetNumberOfBids,return )


::hx::ObjectPtr< BidRepository_obj > BidRepository_obj::__new( ::maglev::MagLev bus) {
	::hx::ObjectPtr< BidRepository_obj > __this = new BidRepository_obj();
	__this->__construct(bus);
	return __this;
}

::hx::ObjectPtr< BidRepository_obj > BidRepository_obj::__alloc(::hx::Ctx *_hx_ctx, ::maglev::MagLev bus) {
	BidRepository_obj *__this = (BidRepository_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(BidRepository_obj), true, "englishauction.BidRepository"));
	*(void **)__this = BidRepository_obj::_hx_vtable;
	__this->__construct(bus);
	return __this;
}

BidRepository_obj::BidRepository_obj()
{
}

void BidRepository_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(BidRepository);
	HX_MARK_MEMBER_NAME(bus,"bus");
	HX_MARK_END_CLASS();
}

void BidRepository_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(bus,"bus");
}

::hx::Val BidRepository_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"bus") ) { return ::hx::Val( bus ); }
		if (HX_FIELD_EQ(inName,"Add") ) { return ::hx::Val( Add_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"Edit") ) { return ::hx::Val( Edit_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"Remove") ) { return ::hx::Val( Remove_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"FindById") ) { return ::hx::Val( FindById_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"GetNumberOfBids") ) { return ::hx::Val( GetNumberOfBids_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val BidRepository_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"bus") ) { bus=inValue.Cast<  ::maglev::MagLev >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void BidRepository_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("bus",40,c3,4a,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo BidRepository_obj_sMemberStorageInfo[] = {
	{::hx::fsUnknown /*  ::maglev::MagLev */ ,(int)offsetof(BidRepository_obj,bus),HX_("bus",40,c3,4a,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *BidRepository_obj_sStaticStorageInfo = 0;
#endif

static ::String BidRepository_obj_sMemberFields[] = {
	HX_("bus",40,c3,4a,00),
	HX_("Add",01,aa,31,00),
	HX_("Edit",2a,f6,e7,2d),
	HX_("Remove",64,10,1d,39),
	HX_("FindById",8b,c2,68,6d),
	HX_("GetNumberOfBids",0c,67,f4,db),
	::String(null()) };

::hx::Class BidRepository_obj::__mClass;

void BidRepository_obj::__register()
{
	BidRepository_obj _hx_dummy;
	BidRepository_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("englishauction.BidRepository",ec,21,b5,1c);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(BidRepository_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< BidRepository_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = BidRepository_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = BidRepository_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace englishauction
